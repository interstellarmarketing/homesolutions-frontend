---
export const prerender = true;

import Layout from "@layouts/Layout.astro";
import DummmyJson from "@assets/info/dummyOptions.json";
import { z } from "zod";

export const estimateParser = z.object({
	fullTrade: z.string(),
	shortTrade: z.string(),
	estimateAction: z.string(),
	type: z.string().nullable(),
});

export const dummyParsed = estimateParser.array().parse(DummmyJson);

export const optionsDeduped = [
	...new Set(dummyParsed.map((x) => x.shortTrade)),
];

console.log({ optionsDeduped });

type TP = typeof DummmyJson;

interface EstimateOptions {
	name: string;
	typeOptions: string[];
}

const estimateOptions: EstimateOptions[] = [
	{
		name: "roof",
		typeOptions: ["asphalt", "metal", "tile", "flat"],
	},
	{
		name: "window",
		typeOptions: ["asphalt", "metal", "tile", "flat"],
	},
	{
		name: "bath",
		typeOptions: ["asphalt", "metal", "tile", "flat"],
	},
	{
		name: "siding",
		typeOptions: ["asphalt", "metal", "tile", "flat"],
	},
];
---

<Layout title="Welcome to Astro.">
	<div class="flex flex-col items-center text-center h-full grow gap-4">
		<h1 class="text-xl">
			<span class="font-black text-2xl">
				Find & Book Estimates
			</span>
			<br />
			With Top Local Contractors
		</h1>
		<div class="grid grid-cols-4 mx-auto my-auto gap-4">
			{
				estimateOptions.map((option) => (
					<a
						href={`/estimate/${option.name}`}
						class="px-4 py-2 border rounded-lg opacity-50 hover:opacity-100"
					>
						{option.name}
					</a>
				))
			}
		</div>
		<div>
			{JSON.stringify(DummmyJson)}
		</div>
	</div>
</Layout>
