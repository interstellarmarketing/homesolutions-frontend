---
import EstimateWrapper from "@layouts/EstimateWrapper.astro";
import Layout from "@layouts/Layout.astro";
import { estimateParser, estimateStore } from "@stores/estimateProgress";

const { estimateType } = Astro.params;

if (!estimateType) {
	return Astro.redirect("/");
}
const existingStore = estimateStore.get();

const cfInfo = Astro.locals.runtime.cf;

//console.log({ cfInfo });

let { firstName, lastName } = existingStore;

const contactParser = estimateParser.pick({
	firstName: true,
	lastName: true,
});

const existingContactParsed = contactParser.safeParse({
	firstName,
	lastName,
});

if (Astro.request.method === "POST") {
	const formData = await Astro.request.formData();
	const firstName = formData.get("firstNameInput");
	const lastName = formData.get("lastNameInput");

	const contactParsed = contactParser.safeParse({
		firstName,
		lastName,
	});

	if (contactParsed.success) {
		estimateStore.set({
			...existingStore,
			...contactParsed.data,
		});
		return Astro.redirect(`/estimate/${estimateType}/address`);
	}
}
---

<EstimateWrapper title={estimateType} estimateType={estimateType}>
	<div class="flex flex-col gap-4 text-center">
		<h2 class="text-2xl md:text-3xl font-bold text-gray-800">Please enter your full name</h2>
		<form class="flex flex-col items-center text-center gap-4 my-4" method="post">
			<input
				type="text"
				required
				class="form-input w-full max-w-md text-center text-lg rounded-lg border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-500"
				placeholder="first name"
				id="firstNameInput"
				name="firstNameInput"
				value={firstName?.length ? firstName : null}
				minlength="2"
			/>
			<input
				type="text"
				required
				class="form-input w-full max-w-md text-center text-lg rounded-lg border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-500"
				placeholder="last name"
				id="lastNameInput"
				name="lastNameInput"
				value={lastName?.length ? lastName : null}
				minlength="2"
			/>
			<button
				type="submit"
				id="contactSubmitButton"
				class="w-full max-w-md bg-orange-300 hover:bg-orange-400 text-gray-900 font-semibold rounded-lg py-3 px-6 transition-colors disabled:opacity-50"
				disabled={!existingContactParsed.success}
			>
				NEXT
			</button>
		</form>
	</div>
</EstimateWrapper>

<script>
	import { z } from "zod";

	const firstNameEl = document.getElementById(
		"firstNameInput",
	) as HTMLInputElement | null;

	const lastNameEl = document.getElementById(
		"lastNameInput",
	) as HTMLInputElement | null;

	const contactSubmitButton = document.getElementById(
		"contactSubmitButton",
	) as HTMLButtonElement | null;
	const targetParser = z.string().min(3);

	if (firstNameEl && lastNameEl && contactSubmitButton) {
		lastNameEl.addEventListener("input", (event) => {
			const target = event.target as HTMLInputElement;
			const targetParse = targetParser.safeParse(
				target.value,
			);
			console.log(targetParse);

			if (targetParse.success) {
				contactSubmitButton.removeAttribute("disabled");
			} else {
				contactSubmitButton.hasAttribute("disabled")
					? null
					: contactSubmitButton.setAttribute(
							"disabled",
							"",
						);
			}
		});
	}
</script>
