---
import { estimateStore } from "@stores/estimateProgress";
import { estimateStepsStore, getFirstStep } from "@stores/estimateStepsStore";
import {
  shortTradesConst,
  type ShortTradeEnum,
} from "@assets/info/estimateOptions";
import { appendQueryParams } from "@utils/queryParams";

// Get estimate type from URL
const { estimateType } = Astro.params;
if (
  !estimateType ||
  !shortTradesConst.includes(estimateType as ShortTradeEnum)
) {
  return Astro.redirect("/");
}

let cfz_facebook_pixel:
  | {
      "BDTt_fb-pixel": { v: string; e: number };
      "BDTt_fb-click": { v: string; e: number };
    }
  | undefined;

try {
  cfz_facebook_pixel = JSON.parse(
    Astro.cookies.get("cfz_facebook-pixel")?.value || ""
  );
} catch (e) {
  console.error(e);
}

// Get all URL search params
const searchParams = Astro.url.searchParams;
const trackingParams = {
  utm_source: searchParams.get("utm_source") || undefined,
  utm_medium: searchParams.get("utm_medium") || undefined,
  utm_campaign: searchParams.get("utm_campaign") || undefined,
  utm_content: searchParams.get("utm_content") || undefined,
  utm_term: searchParams.get("utm_term") || undefined,
  fbclid: searchParams.get("fbclid") || undefined,
  gclid: searchParams.get("gclid") || undefined,
  wbraid: searchParams.get("wbraid") || undefined,
  gbraid: searchParams.get("gbraid") || undefined,
  ssn: searchParams.get("ssn") || undefined,
  fbc: cfz_facebook_pixel?.["BDTt_fb-click"]?.v || undefined,
  fbp: cfz_facebook_pixel?.["BDTt_fb-pixel"]?.v || undefined,
};

// Update store with tracking params
const existingStore = estimateStore.get();
estimateStore.set({
  ...existingStore,
  trackingParams: Object.fromEntries(
    Object.entries(trackingParams).filter(([_, v]) => v !== undefined)
  ),
});

const firstStep = getFirstStep(estimateType as ShortTradeEnum);

// Initialize the estimate steps store
estimateStepsStore.set({
  currentStep: firstStep,
  estimateType: estimateType as ShortTradeEnum,
});

// Redirect to zip page with query params preserved
const redirectUrl = `/estimate/${estimateType}/${firstStep}`;
return Astro.redirect(appendQueryParams(redirectUrl, searchParams));
---
