---
import { estimateStore } from "@stores/estimateProgress";
import { shortTradesConst } from "@assets/info/estimateOptions";

// Get estimate type from URL
const { estimateType } = Astro.params;
if (!estimateType || !shortTradesConst.includes(estimateType as "bathroom" | "roofing" | "siding" | "windows")) {
    return Astro.redirect("/");
}

// Get all URL search params
const searchParams = Astro.url.searchParams;
const trackingParams = {
    utm_source: searchParams.get("utm_source") || undefined,
    utm_medium: searchParams.get("utm_medium") || undefined,
    utm_campaign: searchParams.get("utm_campaign") || undefined,
    utm_content: searchParams.get("utm_content") || undefined,
    utm_term: searchParams.get("utm_term") || undefined,
    fbclid: searchParams.get("fbclid") || undefined,
    gclid: searchParams.get("gclid") || undefined,
    wbraid: searchParams.get("wbraid") || undefined,
    gbraid: searchParams.get("gbraid") || undefined,
    ssn: searchParams.get("ssn") || undefined
};

// Update store with tracking params
const existingStore = estimateStore.get();
estimateStore.set({
    ...existingStore,
    trackingParams: Object.fromEntries(
        Object.entries(trackingParams).filter(([_, v]) => v !== undefined)
    )
});

// Redirect to zip page
return Astro.redirect(`/estimate/${estimateType}/zip`);
---