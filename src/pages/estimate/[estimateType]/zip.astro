---
import { z } from "zod";
import Layout from "@layouts/Layout.astro";
import { estimateStore } from "@stores/estimateProgress";

const { estimateType } = Astro.params;

if (!estimateType) {
	return Astro.redirect("/");
}
const existingStore = estimateStore.get();

let zipCode: string | number = existingStore.zipCode;

if (Astro.request.method === "POST") {
	const formData = await Astro.request.formData();

	const zipParser = z.string();

	const zipCodeParsed = zipParser.safeParse(formData.get("zipInput"));

	console.log({ zipCodeParsed });
	if (zipCodeParsed.success) {
		zipCode = zipCodeParsed.data;
		estimateStore.set({ zipCode });
	}
	console.log({ zipCode });
}
---

<Layout title={estimateType}>
	<div
		class="flex flex-col gap-4 text-center border rounded-lg p-8 container"
	>
		<h2 class="text-xl font-black">
			Let's find your local {estimateType} pros
		</h2>
		<p>Enter the location of your project</p>
		<form
			class="flex flex-col items-center text-center gap-4 my-4"
			method="post"
		>
			<input
				type="text"
				required
				class="bg-transparent rounded-lg border py-2 px-4 text-center max-w-2/3"
				placeholder="zip code"
				id="zipInput"
				name="zipInput"
				value={zipCode.length ? zipCode : null}
				minlength="5"
				maxlength="5"
				pattern="[0-9]{5}"
				inputmode="numeric"
			/>
			<button
				type="submit"
				id="zipSubmitButton"
				class="rounded-lg px-6 py-2 border disabled:opacity-20"
				disabled
			>
				next
			</button>
		</form>
	</div>
</Layout>

<script>
	import { z } from "zod";

	const zipEl = document.getElementById(
		"zipInput",
	) as HTMLInputElement | null;

	const zipSubmitButton = document.getElementById(
		"zipSubmitButton",
	) as HTMLButtonElement | null;

	if (zipEl && zipSubmitButton) {
		zipEl.addEventListener("input", (event) => {
			const target = event.target as HTMLInputElement;
			const targetParse = z
				.string()
				.length(5)
				.safeParse(target.value);
			console.log(targetParse);

			if (targetParse.success) {
				const targetParseAsNumber = z.coerce
					.number()
					.safeParse(targetParse.data);

				if (targetParseAsNumber.success) {
					zipSubmitButton.removeAttribute(
						"disabled",
					);
				}
			} else {
				zipSubmitButton.hasAttribute("disabled")
					? null
					: zipSubmitButton.setAttribute(
							"disabled",
							"",
						);
			}
		});
	}
</script>
