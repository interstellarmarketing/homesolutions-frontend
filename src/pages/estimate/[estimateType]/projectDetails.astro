---
import { z } from "zod";
import Layout from "@layouts/Layout.astro";
import { estimateStore } from "@stores/estimateProgress";
import {
	shortTradeEnum,
	tradeOptionDescriptions,
} from "@assets/info/estimateOptions";
import {
	activeEstimateTypeStore,
	computedEstimateOptions,
} from "@stores/activeEstimateType";
import EstimateWrapper from "@layouts/EstimateWrapper.astro";

let { estimateType } = Astro.params;

const parseEstimateType = shortTradeEnum.safeParse(estimateType);

if (!estimateType || !parseEstimateType.success) {
	return Astro.redirect("/");
}

estimateType = parseEstimateType.data;

const existingStore = estimateStore.get();
const activeEstimateType = activeEstimateTypeStore.get();
const activeEstimateOptions = computedEstimateOptions.get();

if (!activeEstimateOptions) {
	return Astro.redirect("/");
}
console.log({ existingStore, activeEstimateType, activeEstimateOptions });

console.log({ activeEstimateOptions });

if (activeEstimateOptions.data.type?.includes(null)) {
	estimateStore.set({
		...existingStore,
		estimateType: null,
	});
	return Astro.redirect(`/estimate/${estimateType}/contact`);
}

const tradeOptions = tradeOptionDescriptions.find(
	(x) => x.shortTrade === activeEstimateType,
);

if (Astro.request.method === "POST") {
	const formData = await Astro.request.formData();

	const actionParser = z.string();

	const actionParsed = actionParser.safeParse(formData.get("action"));

	if (actionParsed?.success) {
		estimateStore.set({
			...existingStore,
			estimateType: actionParsed?.data,
		});
		return Astro.redirect(`/estimate/${estimateType}/contact`);
	}
}
---

<EstimateWrapper title={estimateType} estimateType={estimateType}>
	<div class="flex flex-col gap-4 text-center">
		<h2 class="text-2xl md:text-3xl font-bold text-gray-800">
			{tradeOptions?.typeDescription}
		</h2>
		<form class="flex flex-col items-center text-center gap-4 my-4" method="post">
			<div class="flex flex-col gap-4 w-full max-w-md">
				{
					activeEstimateOptions.data.type?.map((actionOption) => (
						<label class="flex items-center gap-4 p-4 border rounded-lg cursor-pointer hover:bg-gray-50">
							<input
								type="radio"
								name="action"
								checked={existingStore.estimateAction === actionOption}
								value={actionOption}
								class="form-radio text-orange-300 focus:ring-orange-300"
							/>
							<span class="text-gray-700">{actionOption}</span>
						</label>
					))
				}
			</div>
			<button
				type="submit"
				id="actionSubmitButton"
				class="w-full max-w-md bg-orange-300 hover:bg-orange-400 text-gray-900 font-semibold rounded-lg py-3 px-6 transition-colors disabled:opacity-50"
				disabled
			>
				NEXT
			</button>
		</form>
	</div>
</EstimateWrapper>

<script>
	const radioButtons = document.querySelectorAll(
		'input[name="action"]',
	) as NodeListOf<HTMLInputElement>;
	const submitButton = document.getElementById(
		"actionSubmitButton",
	) as HTMLButtonElement | null;

	if (radioButtons && submitButton) {
		radioButtons.forEach((radioButton) => {
			radioButton.addEventListener("change", () => {
				const selectedValue = document.querySelector(
					'input[name="action"]:checked',
				) as HTMLInputElement | null;

				if (selectedValue) {
					submitButton.removeAttribute(
						"disabled",
					);
				} else {
					submitButton.setAttribute(
						"disabled",
						"",
					);
				}
			});
		});
	}
</script>
