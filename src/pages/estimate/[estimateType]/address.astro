---
import { z } from "zod";
import Layout from "@layouts/Layout.astro";
import { estimateParser, estimateStore } from "@stores/estimateProgress";
import EstimateWrapper from "@layouts/EstimateWrapper.astro";

const { estimateType } = Astro.params;

if (!estimateType) {
	return Astro.redirect("/");
}
const existingStore = estimateStore.get();

if (!existingStore.zipCode) {
	return Astro.redirect(`/estimate/${estimateType}/zip`);
}

const cfInfo = Astro.locals.runtime.cf;

//console.log({ cfInfo });

let { streetAddress, isHomeowner } = existingStore;

const addressParser = estimateParser.pick({
	isHomeowner: true,
	streetAddress: true,
});

const existingAddressParsed = addressParser.safeParse({
	streetAddress,
	isHomeowner,
});

type AddressParser = z.infer<typeof addressParser>;

if (Astro.request.method === "POST") {
	const formData = await Astro.request.formData();
	const extendedAddressParser = addressParser.extend({
		isHomeowner: z.coerce.boolean(),
	});

	const addressParsed = extendedAddressParser.safeParse({
		isHomeowner: formData.get("isHomeownerInput"),
		streetAddress: formData.get("streetAddressInput"),
	});

	console.log(JSON.stringify(addressParsed));

	if (addressParsed.success) {
		estimateStore.set({
			...existingStore,
			...addressParsed.data,
		});

		return Astro.redirect(`/estimate/${estimateType}/finalize`);
	}
}
---

<EstimateWrapper title={estimateType} estimateType={estimateType}>
	<div class="flex flex-col gap-4 text-center">
		<h2 class="text-2xl md:text-3xl font-bold text-gray-800">What is your street address?</h2>
		<form class="flex flex-col items-center text-center gap-4 my-4" method="post">
			<input
				type="text"
				required
				class="form-input w-full max-w-md text-center text-lg rounded-lg border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-500"
				placeholder="Street Address"
				id="streetAddressInput"
				name="streetAddressInput"
				value={streetAddress?.length ? streetAddress : null}
				minlength="2"
			/>

			<p class="text-gray-600">
				{existingStore.city}, {existingStore.state} {existingStore.zipCode}
			</p>

			<label class="flex gap-4 items-center">
				<input
					type="checkbox"
					checked={isHomeowner ?? true}
					class="form-checkbox rounded text-orange-300 focus:ring-orange-300"
					id="isHomeownerInput"
					name="isHomeownerInput"
				/>
				<span class="text-gray-700">I'm the homeowner</span>
			</label>
			<button
				type="submit"
				id="addressSubmitButton"
				class="w-full max-w-md bg-orange-300 hover:bg-orange-400 text-gray-900 font-semibold rounded-lg py-3 px-6 transition-colors disabled:opacity-50"
				disabled={!existingAddressParsed.success}
			>
				NEXT
			</button>
		</form>
	</div>
</EstimateWrapper>

<script>
	import { z } from "zod";

	const streetAddressInput = document.getElementById(
		"streetAddressInput",
	) as HTMLInputElement | null;

	const addressSubmitButton = document.getElementById(
		"addressSubmitButton",
	) as HTMLButtonElement | null;

	const targetParser = z.string().min(5);

	if (streetAddressInput && addressSubmitButton) {
		streetAddressInput.addEventListener("input", (event) => {
			const target = event.target as HTMLInputElement;
			const targetParse = targetParser.safeParse(
				target.value,
			);
			console.log(targetParse);

			if (targetParse.success) {
				addressSubmitButton.removeAttribute("disabled");
			} else {
				addressSubmitButton.hasAttribute("disabled")
					? null
					: addressSubmitButton.setAttribute(
							"disabled",
							"",
						);
			}
		});
	}
</script>
