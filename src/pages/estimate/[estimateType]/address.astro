---
import { z } from "zod";
import Layout from "@layouts/Layout.astro";
import { estimateStore } from "@stores/estimateProgress";

const { estimateType } = Astro.params;

if (!estimateType) {
	return Astro.redirect("/");
}
const existingStore = estimateStore.get();

if (!existingStore.zipCode) {
	return Astro.redirect(`/estimate/${estimateType}/zip`);
}

const cfInfo = Astro.locals.runtime.cf;

//console.log({ cfInfo });

let { streetAddress, isHomeowner } = existingStore;

if (Astro.request.method === "POST") {
	const formData = await Astro.request.formData();

	return Astro.redirect(`/estimate/${estimateType}/finalize`);
}
---

<Layout title={estimateType}>
	<div
		class="flex flex-col gap-4 text-center border rounded-lg p-8 container"
	>
		<h2 class="text-xl font-black">What is your street address?</h2>
		<form
			class="flex flex-col items-center text-center gap-4 my-4"
			method="post"
		>
			<input
				type="text"
				required
				class="bg-transparent rounded-lg border py-2 px-4 text-center max-w-2/3"
				placeholder="Street Address"
				id="streetAddressInput"
				name="streetAddressInput"
				value={streetAddress?.length
					? streetAddress
					: null}
				minlength="2"
			/>

			<p>
				{existingStore.city}, {existingStore.state}
				{existingStore.zipCode}
			</p>

			<label class="flex gap-4 items-center">
				<input
					type="checkbox"
					checked={isHomeowner ?? true}
					class="bg-transparent rounded-lg p-3"
					placeholder="Street Address"
					id="isHomeownerInput"
					name="isHomeownerInput"
				/>
				I'm the homeowner
			</label>

			<button
				type="submit"
				id="addressSubmitButton"
				class="rounded-lg px-6 py-2 border disabled:opacity-20"
				disabled
			>
				next
			</button>
		</form>
	</div>
</Layout>

<script>
	import { z } from "zod";

	const streetAddressInput = document.getElementById(
		"streetAddressInput",
	) as HTMLInputElement | null;

	const addressSubmitButton = document.getElementById(
		"addressSubmitButton",
	) as HTMLButtonElement | null;

	const targetParser = z.string().length(5);
	const targetParserAsNumber = z.coerce.number();

	if (streetAddressInput && addressSubmitButton) {
		streetAddressInput.addEventListener("input", (event) => {
			const target = event.target as HTMLInputElement;
			const targetParse = targetParser.safeParse(
				target.value,
			);
			console.log(targetParse);

			if (targetParse.success) {
				const targetParseAsNumber =
					targetParserAsNumber.safeParse(
						targetParse.data,
					);

				if (targetParseAsNumber.success) {
					zipSubmitButton.removeAttribute(
						"disabled",
					);
				}
			} else {
				zipSubmitButton.hasAttribute("disabled")
					? null
					: zipSubmitButton.setAttribute(
							"disabled",
							"",
						);
			}
		});
	}
</script>
